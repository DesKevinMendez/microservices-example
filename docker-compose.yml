version: "3.7"

networks:
  microservice-net:
    driver: bridge

services:
  zookeeper:
    image: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - microservice-net
  kafka:
    image: 'bitnami/kafka'
    container_name: 'kafka'
    ports:
      - '9093:9093'
    environment:
      # - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - microservice-net

  # producerkafka: &kafkaproducer
  #   tty: true
  #   stdin_open: true
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   # image: nodejs
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #   container_name: producer_api
  #   restart: unless-stopped
  #   ports:
  #     - '9000:3000'
  #   command: ["yarn", "producer"]
  #   networks:
  #     - microservice-net

  # consumer:
  #   <<: *kafkaproducer
  #   container_name: consumer_worker
  #   ports:
  #     - '9001:3000'
  #   command: ["yarn", "consumer"]
