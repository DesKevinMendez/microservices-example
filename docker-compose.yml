version: "3.7"
volumes:
  pgdata:
networks:
  microservice-net:
    driver: bridge

services:
  zookeeper:
    image: 'bitnami/zookeeper'
    container_name: 'keeper'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - microservice-net
  kafka:
    image: 'bitnami/kafka'
    container_name: 'kafka'
    ports:
      - '9093:9093'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - microservice-net

  db:
    image: postgres:11
    container_name: 'postgres'
    env_file: 
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - microservice-net

  web:
    container_name: 'python-web'
    build:
      context: ${PWD}/producer-python
      # dockerfile: ./Dockerfile
    env_file: 
      - .env
    environment:
      FLASK_ENV: ${FLASK_ENV}
      FLASK_CONFIG: ${FLASK_CONFIG}
      APPLICATION_DB: ${APPLICATION_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOSTNAME: "db"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    command: flask run --host 0.0.0.0
    volumes:
      - ${PWD}/producer-python:/home/
    ports:
      - "5001:5000"
    depends_on:
      - db
    networks:
      - microservice-net
 
  consumer:
    container_name: 'consumer'
    build:
      context: ${PWD}/consumer-worker
    # command : npx nodemon index.js
    volumes:
      - ${PWD}/consumer-worker:/app/
    networks:
      - microservice-net
    # ports:
    #   - "5001:5000"

