version: "3.7"
volumes:
  pgdata:
networks:
  microservice-net:
    driver: bridge

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: 'wurstmeister_zookeeper'
    ports:
    - 2181:2181
    networks:
      - microservice-net
  kafka:
    image: wurstmeister/kafka
    container_name: 'wurstmeister_kafka'
    env_file:
      - .env
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - microservice-net

  db:
    image: postgres:11
    container_name: 'postgres'
    env_file: 
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - microservice-net

  web:
    container_name: 'python-web'
    build:
      context: ${PWD}/producer-python
      # dockerfile: ./Dockerfile
    env_file: 
      - .env
    environment:
      FLASK_ENV: ${FLASK_ENV}
      FLASK_CONFIG: ${FLASK_CONFIG}
      APPLICATION_DB: ${APPLICATION_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOSTNAME: "db"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    command: flask run --host 0.0.0.0
    volumes:
      - ${PWD}/producer-python:/home/
    ports:
      - "5001:5000"
    depends_on:
      - kafka
      - zookeeper
      - db
    networks:
      - microservice-net

  consumer:
    container_name: 'consumer'
    build:
      context: ${PWD}/consumer-worker
    depends_on:
      - kafka
      - zookeeper
      - db
    volumes:
      - ${PWD}/consumer-worker:/app/
    networks:
      - microservice-net
  fastify_producer:
    container_name: 'fastify_producer'
    build:
      context: ${PWD}/producer-api
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "3006:3000"
    command: npx nodemon index.js
    volumes:
      - ${PWD}/producer-api:/home/
    networks:
      - microservice-net

